heat_template_version: 2013-05-23

description: Template to deploy BIG-IP instances for DO testing.

parameters:
  admin_password:
    type: string
    description: Password to use for admin account.
  root_password:
    type: string
    description: Password to use for root account.
  bigip_image:
    type: string
    description: Name of OpenStack BIG-IP image to use.
    default: BIGIP-15.1.0.5-0.0.8
  image_flavor:
    type: string
    description: Flavor of image to use
    default: F5-BIGIP-medium

resources:
  configuration_bigip:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            __admin_password__: { get_param: admin_password }
            __root_password__: { get_param: root_password }
          template: |
            #!/bin/bash
            echo 'Setting passwords'
            /usr/bin/passwd admin '__admin_password__' >/dev/null 2>&1
            /usr/bin/passwd root '__root_password__' >/dev/null 2>&1
            echo 'Waiting for tmsh to be ready'
            checks=0
            while [ $checks -lt 120 ]; do echo 'checking mcpd'
                if tmsh -a show sys mcp-state field-fmt | grep -q running; then
                    echo mcpd ready
                    break
                fi
                echo mcpd not ready yet
                let checks=checks+1
                sleep 10
            done
            echo 'Modifying settings'
            # Enable admin login
            tmsh modify auth user admin shell bash
            tmsh modify sys software update auto-phonehome disabled
            # Configure directory size
            tmsh modify /sys disk directory /appdata new-size 130985984
            tmsh save /sys config
            echo 'Waiting for REST Framework'
            # Wait for REST framework
            until curl -u "admin:" --write-out "" --fail --silent "http://localhost:8100/mgmt/shared/iapp/package-management-tasks/available"; do
                sleep 30
            done
            echo
            echo Done

  device-1:
    type: OS::Nova::Server
    properties:
      image: { get_param: bigip_image }
      flavor: { get_param: image_flavor }
      name:
        list_join: ['', ['integration_', { get_param: bigip_image }, '_1']]
      networks:
        - network: 2bfdaa3a-b3c7-414a-934d-1d47751bef4d
        - network: e1396dda-27ba-406e-9c21-4d502a22c884
        - network: f5129f4f-2d9e-4bbd-93e9-dc56d22ab272
      config_drive: true
      user_data_format: RAW
      user_data: { get_resource: configuration_bigip }

  device-2:
    type: OS::Nova::Server
    properties:
      image: { get_param: bigip_image }
      flavor: { get_param: image_flavor }
      name:
        list_join: ['', ['integration_', { get_param: bigip_image }, '_2']]
      networks:
        - network: 2bfdaa3a-b3c7-414a-934d-1d47751bef4d
        - network: e1396dda-27ba-406e-9c21-4d502a22c884
        - network: f5129f4f-2d9e-4bbd-93e9-dc56d22ab272
      config_drive: true
      user_data_format: RAW
      user_data: { get_resource: configuration_bigip }

  device-3:
    type: OS::Nova::Server
    properties:
      image: { get_param: bigip_image }
      flavor: { get_param: image_flavor }
      name:
        list_join: ['', ['integration_', { get_param: bigip_image }, '_3']]
      networks:
        - network: 2bfdaa3a-b3c7-414a-934d-1d47751bef4d
        - network: e1396dda-27ba-406e-9c21-4d502a22c884
        - network: f5129f4f-2d9e-4bbd-93e9-dc56d22ab272
      config_drive: true
      user_data_format: RAW
      user_data: { get_resource: configuration_bigip }

outputs:
  device-1_ip:
    description: The IP address of device-1
    value: { get_attr: [device-1, first_address] }
  device-2_ip:
    description: The IP address of device-2
    value: { get_attr: [device-2, first_address] }
  device-2_ip:
    description: The IP address of device-3
    value: { get_attr: [device-3, first_address] }