image: node:8

stages:
    - test
    - package
    - publish

test:
    stage: test
    tags:
        - docker-executor
    script:
        - npm install
        - npm run lint
        - npm test

build_rpm:
    image: node:8-alpine
    stage: package
    tags:
        - docker-executor
    script:
        - apk add rpm bash
        - build/buildRpm.sh
    artifacts:
        name: f5-decon-$CI_BUILD_REF
        paths:
            - build/rpmbuild/RPMS/noarch/



pages:
    stage: publish
    tags:
        - docker-executor
    only:
        - develop
    script:
        - node build/generateDocs.js
    artifacts:
        paths:
            - public


create docs:
    image: ${CONTAINTHEDOCS_IMAGE}
    stage: package
    script:
        - make html
        - echo "Checking grammar and style"
        # Runs the grammar check on everything except the /docs/drafts directory
        - vale --glob='*.rst' .
        - echo "Checking links"
        - make linkcheck


    tags:
        - cm-official-docker-executor
    artifacts:
        expire_in: 1 week
        name: sphinx-docs_$CI_BUILD_REF
        paths:
            - docs/_build/html

# Deploy docs to Pages for review
# Docs are staged on this projects pages site
pages:
    stage: publish
    environment:
        name: review
        url: https://${CI_PROJECT_NAMESPACE}.${PAGES_DOMAIN}/${CI_PROJECT_NAME}/
    tags:
        - cm-official-docker-executor
    dependencies:
        - create docs
    script:
        - mkdir -p ./public
        - cp -R docs/_build/html/* ./public
    artifacts:
        paths:
            - public
    only:
        - branches

Publish docs to staging:
  image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
  stage: publish
  environment: 
    name: staging
    url: https://clouddocs.f5networks.net/products/extensions/f5-declarative-onboarding/latest
  tags:
    - cm-official-docker-executor
  only:
    - doc-staging@cloudsolutions/f5-declarative-onboarding
  dependencies:
    - create docs
  script:
    - aws s3 sync docs/_build/html s3://clouddocs.f5networks.net/products/extensions/f5-declarative-onboarding/latest
    # create invalidation to clear cloudfront cache
    - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-declarative-onboarding/latest/

# Publish docs to clouddocs.f5.com
# docs to production:
#    image: ${CONTAINTHEDOCS_IMAGE}
#    stage: publish
#    environment:
#        name: production
#        url: https://clouddocs.f5.com/products/extensions/f5-declarative-onboarding/latest
#    only:
#        # Currently will only deploy to clouddocs.f5.com on commits to doc-publish
#        # fill in desired release branch name and uncomment to add deployment from a branch
#        - doc-publish@cloudsolutions/f5-declarative-onboarding
#    tags:
#        - cm-official-docker-executor
#    dependencies:
#        - create docs
#    script:

        # Publish docs to clouddocs.f5.com (live site).
#        - publish-product-docs-to-prod extensions/f5-declarative-onboarding/latest
        # create invalidation to clear cloudfront cache
#        - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-declarative-onboarding
