image: node:8

stages:
    - test
    - package
    - publish

test:
    stage: test
    tags:
        - docker-executor
    script:
        - npm install
        - npm test

build_rpm:
    image: node:8-alpine
    stage: package
    tags:
        - docker-executor
    script:
        - apk add rpm bash
        - build/buildRpm.sh
    artifacts:
        name: f5-decon-$CI_BUILD_REF
        paths:
            - build/rpmbuild/RPMS/noarch/



pages:
    stage: publish
    tags:
        - docker-executor
    only:
        - develop
    script:
        - node build/generateDocs.js
    artifacts:
        paths:
            - public


create docs:
  image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
  stage: package
  script:
  - make html
  - echo "Checking grammar and style"
  # Runs the grammar check on everything except the /docs/drafts directory
  - vale --glob='*.rst' .
  - echo "Checking links"
  - make linkcheck

  
  tags:
  - cm-official-docker-executor
  artifacts:
    expire_in: 1 week
    name: sphinx-docs_$CI_BUILD_REF
    paths:
    - docs/_build/html


# Deploy docs to Pages for review
pages:
  stage: publish
  environment: 
    name: review
    url: https://${CI_PROJECT_NAMESPACE}.pages.gitswarm.f5net.com/${CI_PROJECT_NAME}/
  tags:
  - cm-official-docker-executor
  dependencies:
  - create docs  
  script:
  - mkdir -p ./public
  - cp -R docs/_build/html/* ./public
  artifacts:
    paths:
    - public
  only:
  - branches



# Publish docs to clouddocs.f5.com
docs to production:
  image: quay.pdsea.f5net.com/doc-ops/containthedocs:710e05a8ed
  stage: publish
  environment:
    name: production
    url: https://clouddocs.f5.com/products/extensions/f5-declarative-onboarding
  only:
  # Currently will only deploy to clouddocs.f5.com on commits to doc-publish
  # fill in desired release branch name and uncomment to add deployment from a branch
  - doc-publish@cloudsolutions/f5-declarative-onboarding
  tags:
  - cm-official-docker-executor
  dependencies:
  - create docs
  script:
  # Uncomment and set to create desired version format
  - export VERSION=3
  - export AWS_S3_BUCKET=clouddocs.f5.com
  # Publish docs to clouddocs.f5.com (live site).
  - publish-product-docs-to-prod extensions/f5-declarative-onboarding $VERSION
  # create invalidation to clear cloudfront cache
  - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-declarative-onboarding
  - printf "Your documentation is live at https://${AWS_S3_BUCKET}/products/extensions/f5-declarative-onboarding$(VERSION)"