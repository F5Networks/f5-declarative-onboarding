{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://raw.githubusercontent.com/F5Networks/f5-declarative-onboarding/master/schema/network.schema.json",
    "title": "F5 Declarative Onboarding network declaration",
    "description": "Network properties for onboarding a BIG-IP.",
    "allOf": [
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "Trunk" } }
            },
            "then": {
                "required": ["class"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains Trunk configuration.",
                        "type": "string",
                        "const": "Trunk"
                    },
                    "distributionHash": {
                        "description": "Specifies the basis for the hash that the system uses as the frame distribution algorithm.  Choices are 'dst-mac' (use the destination MAC addresses), 'src-dist-mac' (use the source, destination, and MAC addresses), or 'src-dst-ipport' (use the source and destination IP addresses and ports).",
                        "type": "string",
                        "enum": ["dst-mac", "src-dst-ipport", "src-dst-mac"],
                        "default": "dst-mac"
                    },
                    "interfaces": {
                        "description": "Interfaces for the Trunk.  The number of interfaces used is recommended to be a power of 2 (for example 2, 4, or 8).  Interfaces must be untagged.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "lacpEnabled": {
                        "description": "Specifies, when true, that the system supports the link aggregation control protocol (LACP), which monitors the trunk by exchanging control packets over the member links to determine the health of the links.",
                        "type": "boolean",
                        "default": false
                    },
                    "lacpMode": {
                        "description": "Specifies the operation mode for LACP if the lacp option is enabled for the trunk.  The values are 'active' (specifies the system periodically transmits LACP packets, regardless of the control value of the peer system) and 'passive' (specifies the system periodically transmits LACP packets, unless the control value of the peer system is active).",
                        "type": "string",
                        "enum": ["active", "passive"],
                        "default": "active"
                    },
                    "lacpTimeout": {
                        "description": "Specifies the rate at which the system sends the LACP control packets.",
                        "type": "string",
                        "enum": ["long", "short"],
                        "default": "long"
                    },
                    "linkSelectPolicy": {
                        "description": "Sets the LACP policy that the trunk uses to determine which member link (interface) can handle new traffic.",
                        "type": "string",
                        "enum": ["auto", "maximum-bandwidth"],
                        "default": "auto"
                    },
                    "qinqEthertype": {
                        "description": "Specifies the ether-type value used for the packets handled on this trunk when it is a member in a QinQ vlan.",
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{4}$",
                        "default": "0x8100"
                    },
                    "spanningTreeEnabled": {
                        "description": "Enables the spanning tree protocols (STP).",
                        "type": "boolean",
                        "default": true
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "VLAN" } }
            },
            "then": {
                "required": ["class", "interfaces"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains VLAN configuration.",
                        "type": "string",
                        "const": "VLAN"
                    },
                    "mtu": {
                        "description": "MTU for the VLAN.",
                        "type": "integer",
                        "minimum": 576,
                        "maximum": 9198,
                        "default": 1500
                    },
                    "tag": {
                        "description": "Tag for the VLAN.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    },
                    "interfaces": {
                        "description": "Interfaces for the VLAN.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": ["name"],
                            "properties": {
                                "name": {
                                    "description": "Name of the interface.",
                                    "type": "string"
                                },
                                "tagged": {
                                    "description": "Whether or not the interface is tagged. Default is true if a VLAN tag is provided, otherwise false.",
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "cmpHash": {
                        "description": "Specifies how the traffic on the VLAN will be disaggregated.",
                        "type": "string",
                        "enum": ["default", "dst-ip", "src-ip"],
                        "default": "default"
                    },
                    "failsafeEnabled": {
                        "description": "Enables a fail-safe mechanism that causes the active cluster to fail over to a redundant cluster when loss of traiffic is detected on a VLAN",
                        "type": "boolean",
                        "default": false
                    },
                    "failsafeAction": {
                        "description": "Specifies the action for the system to take when the fail-safe mechanism is triggered",
                        "type": "string",
                        "enum": ["failover", "failover-restart-tm", "reboot", "restart-all"],
                        "default": "failover-restart-tm"
                    },
                    "failsafeTimeout": {
                        "description": "Specifies the number of seconds that an active unit can run without detecting network traffic on this VLAN before starting a failover",
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 3600,
                        "default": 90
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "SelfIp" } }
            },
            "then": {
                "required": ["class", "address", "vlan"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains Self IP configuration.",
                        "type": "string",
                        "const": "SelfIp"
                    },
                    "address": {
                        "description": "IP address.",
                        "type": "string",
                        "format": "f5ip"
                    },
                    "trafficGroup": {
                        "description": "Traffic group for the Self IP.",
                        "type": "string",
                        "enum": ["traffic-group-local-only", "traffic-group-1"],
                        "default": "traffic-group-local-only"
                    },
                    "vlan": {
                        "description": "VLAN or Tunnel for the self IP.",
                        "type": "string"
                    },
                    "allowService": {
                        "description": "Which services (ports) to allow on the self IP. Value should be 'all', 'none', 'default', or array of '<service:port>",
                        "oneOf": [
                            {
                                "type": "string",
                                "enum": ["all", "none", "default"]
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "pattern": "(\\w+:\\d+)"
                                }
                            }
                        ],
                        "default": "default"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "DNS_Resolver" } }
            },
            "then": {
                "required": ["class"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains DNS Resolver configuration.",
                        "type": "string",
                        "const": "DNS_Resolver"
                    },
                    "answerDefaultZones": {
                        "description": "Specifies whether the resolver answers queries for default zones: localhost, reverse 127.0.0.1, ::1, and AS112 zones.",
                        "type": "boolean",
                        "default": false
                    },
                    "cacheSize": {
                        "description": "Specifies the maximum cach size in bytes of the DNS Resolver object",
                        "type": "integer",
                        "minimum": 10,
                        "maximum": 9437184,
                        "default": 5767168
                    },
                    "forwardZones": {
                        "description": "Forward zones on a DNS Resolver.  A given zone name should only use the symbols allowed for a fully qualified domain name (FQDN), namely ASCII letters a through z, digits 0 through 9, hyphen, nad period.  For example site.example.com would be a valid zone name.  A DNS Resolver configured with a forward zone will forward any queries that resulted in a cache-miss and which also match a configured zone name, to the nameserver specified on the zone.",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": ["name"],
                            "properties": {
                                "name": {
                                    "description": "Name of a forward zone.",
                                    "type": "string",
                                    "format": "hostname"
                                },
                                "nameservers": {
                                    "description": "Specifies the IP address and service port of a recursive nameserver that answers DNS queries when the response cannot be found in the internal DNS resolver cache.  Enter each address in the format address:port (IPv4) or addrss.port (IPv6).  The port is usually 53.",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "randomizeQueryNameCase": {
                        "description": "Specifies whether the resolver randomizes the case of query names.",
                        "type": "boolean",
                        "default": true
                    },
                    "routeDomain": {
                        "description": "Specifies the name of the route domain the resolver uses for outbound traffic.",
                        "type": "string",
                        "default": "0"
                    },
                    "useIpv4": {
                        "description": "Specifies whether the resolver sends DNS queries to IPv4",
                        "type": "boolean",
                        "default": true
                    },
                    "useIpv6": {
                        "description": "Specifies whether the resolver sends DNS queries to IPv6",
                        "type": "boolean",
                        "default": true
                    },
                    "useTcp": {
                        "description": "Specifies whether the resolver sends DNS queries over TCP",
                        "type": "boolean",
                        "default": true
                    },
                    "useUdp": {
                        "description": "Specifies whether the resolver sends DNS queries over UDP",
                        "type": "boolean",
                        "default": true
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "Route" } }
            },
            "then": {
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains Route configuration.",
                        "type": "string",
                        "const": "Route"
                    },
                    "gw": {
                        "description": "Gateway for the route.",
                        "type": "string",
                        "anyOf": [
                            { "format": "ipv4" },
                            { "format": "ipv6" }
                        ]
                    },
                    "network": {
                        "description": "IP address/netmask for route",
                        "type": "string",
                        "anyOf": [
                            { "format": "f5ip" },
                            { "enum": ["default", "default-inet6"]}
                        ],
                        "default": "default"
                    },
                    "mtu": {
                        "description": "MTU for the route.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9198
                    },
                    "target": {
                        "description": "The VLAN or Tunnel for the Route.",
                        "type": "string",
                        "minLength": 0
                    },
                    "localOnly": {
                        "description": "A boolean to indicate if the Route should be added to the LOCAL_ONLY partition. 'Across Network' clusters in AWS require this partition to be configured.",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "oneOf": [
                    {
                        "required": ["class", "gw"],
                        "not": {
                            "required": ["target"]
                        }
                    },
                    {
                        "required": ["class", "target"],
                        "not": {
                            "required": ["gw"]
                        }
                    }
                ]
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "RouteDomain" } }
            },
            "then": {
                "required": ["class", "id"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains Route Domain configuration.",
                        "type": "string",
                        "const": "RouteDomain"
                    },
                    "id": {
                        "description": "Specifies a unique numeric identifier for the route domain.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65534
                    },
                    "bandWidthControllerPolicy": {
                        "description": "Specifies the bandwidth controller policy for the route domain.",
                        "type": "string"
                    },
                    "connectionLimit": {
                        "description": "The connection limit for the route domain.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295,
                        "default": 0
                    },
                    "flowEvictionPolicy": {
                        "description": "Specifies a flow eviction policy for the route domain to use.",
                        "type": "string"
                    },
                    "ipIntelligencePolicy": {
                        "description": "Specifies an IP intelligence policy for the route domain to use.",
                        "type": "string"
                    },
                    "enforcedFirewallPolicy": {
                        "description": "Specifies an enforced firewall policy on the route domain.",
                        "type": "string"
                    },
                    "stagedFirewallPolicy": {
                        "description": "Specifies a staged firewall policy on the route domain.",
                        "type": "string"
                    },
                    "securityNatPolicy": {
                        "description": "Specifies the security NAT policy for the route domain.",
                        "type": "string"
                    },
                    "servicePolicy": {
                        "description": "Specifies the service policy for the route domain.",
                        "type": "string"
                    },
                    "strict": {
                        "description": "Determines whether a connection can span route domains.",
                        "type": "boolean",
                        "default": true
                    },
                    "routingProtocols": {
                        "description": "Specifies routing protocols for the system to use in the route domain.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": ["BFD", "BGP", "IS-IS", "OSPFv2", "OSPFv3", "PIM", "RIP", "RIPng"]
                        }
                    },
                    "vlans": {
                        "description": "Specifies VLANS for the system to use in the route domain.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "DagGlobals" } }
            },
            "then": {
                "required": ["class"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains DAG Globals configuration.",
                        "type": "string",
                        "const": "DagGlobals"
                    },
                    "icmpHash": {
                        "description": "Specifies ICMP hash for ICMP echo request and ICMP echo reply in SW DAG.",
                        "type": "string",
                        "enum": ["icmp", "ipicmp"],
                        "default": "icmp"
                    },
                    "ipv6PrefixLength": {
                        "description": "Specifies whether SPDAG or IPv6 prefix DAG should be used to disaggregate IPv6 traffic when vlan cmp hash is set to src-ip or dst-ip.",
                        "type": "integer",
                        "default": 128,
                        "minimum": 0,
                        "maximum": 128
                    },
                    "roundRobinMode": {
                        "description": "Specifies whether the round robin disaggregator (DAG) on a blade can disaggregate packets to all the TMMs in the system or only to the TMMs local to the blade.",
                        "type": "string",
                        "enum": ["global", "local"],
                        "default": "global"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "Tunnel" } }
            },
            "then": {
                "required": ["class", "tunnelType"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains Tunnel configuration.",
                        "type": "string",
                        "enum": ["Tunnel"]
                    },
                    "tunnelType": {
                        "description": "Specifies the profile that you want to associate with the Tunnel.",
                        "type": "string",
                        "enum": ["tcp-forward"]
                    },
                    "mtu": {
                        "description": "Specifies the maximum transmission unit of the Tunnel.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535,
                        "default": 0
                    },
                    "usePmtu": {
                        "description": "Enable or disable the Tunnel to use Path MTU information provided by ICMP NeedFrag error messages.",
                        "type": "boolean",
                        "default": true
                    },
                    "typeOfService": {
                        "description": "Specifies a value for insertion into the Type of Service octet within the IP header of the encapsulating header of transmitted packets.",
                        "oneOf": [
                            {
                                "type": "string",
                                "enum": ["preserve"]
                            },
                            {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 255
                            }
                        ],
                        "default": "preserve"
                    },
                    "autoLastHop": {
                        "description": "Specifies that packets are returned to the MAC address from which they were sent when enabled. The default setting specifies that the system uses the default route to send back the request.",
                        "type": "string",
                        "enum": [
                            "default",
                            "enabled",
                            "disabled"
                        ],
                        "default": "default"
                    }
                },
                "additionalProperties": false
            }
        },
        {
            "if": {
                "required": ["class"],
                "properties": { "class": { "const": "RoutingAsPath" } }
            },
            "then": {
                "required": ["class"],
                "properties": {
                    "class": {
                        "description": "Indicates that this property contains routing AS path configuration.",
                        "type": "string",
                        "const": "RoutingAsPath"
                    },
                    "entries": {
                        "description": "An array that holds action and regex objects",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "integer",
                                    "description": "Name of the entity"
                                },
                                "regex": {
                                    "type": "string",
                                    "description": "A regex string"
                                }
                            },
                            "required": ["name", "regex"],
                            "additionalProperties": false
                        }
                    }
                },
                "required": ["class"],
                "additionalProperties": false
            }
        }
    ]
}
